<!DOCTYPE html>
<html>
<head>
<title>Enchanted Memory Game</title>
<style>
body {
  background-color: black;
  display: flex;
  justify-content: center;
  align-items: center;
  min-height: 100vh;
  margin: 0;
  font-family: sans-serif;
}

#game-board {
  display: grid;
  grid-template-columns: repeat(4, 100px); /* Adjust for desired size */
  grid-gap: 10px;
}

.card {
  width: 100px;
  height: 100px;
  background-color: white;
  border: 2px solid black;
  border-radius: 8px;
  cursor: pointer;
  perspective: 1000px; /* For 3D flip effect */
}

.card-inner {
  position: relative;
  width: 100%;
  height: 100%;
  transition: transform 0.6s;
  transform-style: preserve-3d;
}

.card.flipped .card-inner {
  transform: rotateY(180deg);
}

.card-front, .card-back {
  position: absolute;
  width: 100%;
  height: 100%;
  backface-visibility: hidden;
  display: flex;
  justify-content: center;
  align-items: center;
}

.card-front {
  background-color: white;
  border-radius: 8px;
}

.card-back {
  background-color: #eee; /* Slightly darker back */
  transform: rotateY(180deg);
  border-radius: 8px;
}

.card-back img {
  max-width: 80%;
  max-height: 80%;
}

#message {
    color: white;
    margin-top: 20px;
    font-size: 1.2em;
}
</style>
</head>
<body>

<div id="game-board"></div>
<p id="message"></p>

<audio id="flip-sound"> <source src="flip.mp3" type="audio/mpeg"> Your browser does not support the audio element. </audio>
<audio id="match-sound"> <source src="match.mp3" type="audio/mpeg"> Your browser does not support the audio element. </audio>
<audio id="win-sound"> <source src="win.mp3" type="audio/mpeg"> Your browser does not support the audio element. </audio>
<audio id="lose-sound"> <source src="lose.mp3" type="audio/mpeg"> Your browser does not support the audio element. </audio>


<script>
const gameBoard = document.getElementById('game-board');
const messageDisplay = document.getElementById('message');
const flipSound = document.getElementById('flip-sound');
const matchSound = document.getElementById('match-sound');
const winSound = document.getElementById('win-sound');
const loseSound = document.getElementById('lose-sound');

const animals = [
    "cat", "dog", "elephant", "lion", "tiger", "bear", "cat", "dog", "elephant", "lion", "tiger", "bear" // Pairs of animals
];

let flippedCards = [];
let matchedCards = 0;
let isFlipping = false; // Prevent flipping multiple cards at once

function createBoard() {
    // Shuffle the animals array using Fisher-Yates shuffle algorithm
    for (let i = animals.length - 1; i > 0; i--) {
        const j = Math.floor(Math.random() * (i + 1));
        [animals[i], animals[j]] = [animals[j], animals[i]];
    }

    animals.forEach(animal => {
        const card = document.createElement('div');
        card.classList.add('card');

        const cardInner = document.createElement('div');
        cardInner.classList.add('card-inner');

        const cardFront = document.createElement('div');
        cardFront.classList.add('card-front');

        const cardBack = document.createElement('div');
        cardBack.classList.add('card-back');
        cardBack.innerHTML = `<img src="${animal}.jpg" alt="${animal}">`; // Use animal name for image source

        cardInner.appendChild(cardFront);
        cardInner.appendChild(cardBack);
        card.appendChild(cardInner);
        gameBoard.appendChild(card);

        card.addEventListener('click', flipCard);
    });
}


function flipCard(event) {
    if (isFlipping) return; // Prevent flipping while animation is in progress

    const card = event.currentTarget;
    if (card === flippedCards[0]) return; // Prevent clicking the same card twice

    flipSound.play();
    card.classList.add('flipped');
    flippedCards.push(card);

    if (flippedCards.length === 2) {
        isFlipping = true; // Set flipping flag

        setTimeout(checkMatch, 1000); // Check for match after a delay
    }
}

function checkMatch() {
    const [card1, card2] = flippedCards;
    const animal1 = card1.querySelector('.card-back img').getAttribute('src');
    const animal2 = card2.querySelector('.card-back img').getAttribute('src');

    if (animal1 === animal2) {
        matchSound.play();
        matchedCards += 2;
        card1.removeEventListener('click', flipCard); // Prevent further clicks on matched cards
        card2.removeEventListener('click', flipCard);

        if (matchedCards === animals.length) {
            winSound.play();
            messageDisplay.textContent = "You won!";
        }
    } else {
        loseSound.play();
        setTimeout(() => {
            card1.classList.remove('flipped');
            card2.classList.remove('flipped');
        }, 500); // Small delay before flipping back
    }

    flippedCards = [];
    isFlipping = false; // Reset flipping flag
}

createBoard();
</script>

</body>
</html>

